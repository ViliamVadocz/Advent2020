parse_int, int_to_char := $parse

T := 1 > 0
F := !T

file := $$stdio\fopen(&"input.txt\0", &"r\0")

get_char := () { int_to_char($$stdio\fgetc(file)) }

read_line := () { 
    first_char := get_char()
    jump := first_char = 'j'
    nop := first_char = 'n'
    _ := get_char() # m
    _ := get_char() # p
    _ := get_char() # SPACE
    sign := {get_char() = '+' -> 1; -1}
    num := (buffer, index) {
        char := get_char()
        char = '\n' || $$stdio\feof(file) != 0 -> buffer, index
        buffer[index] := char
        @(buffer, index + 1)
    } (['\x00'; 3], 0)
    jump, nop, sign * parse_int(num)
}

jmp, nop, amount := (jmp, nop, amount, index) {
    line := read_line()
    index = |jmp| || $$stdio\feof(file) != 0 -> jmp, nop, amount
    jmp[index], nop[index], amount[index] := line
    @(jmp, nop, amount, index + 1)
} ([F; 660], [F; 660], [0; 660], 0)

execute := (jmp, nop) {
    (visited, pos, acc) {
        pos = |jmp| -> T, acc
        visited[pos] || pos < 0 || pos > |jmp| -> F, acc
        visited[pos] := T
        jmp[pos] -> @(visited, pos + amount[pos], acc)
        nop[pos] -> @(visited, pos + 1, acc)
        @(visited, pos + 1, acc + amount[pos])
    } ([F; |jmp|], 0, 0)
}

# try switching one jmp/nop instruction (starting from back)
(instruction) {
    instruction < 0 -> -1, 0
    jmp[instruction] -> {
        jmp[instruction] := F
        nop[instruction] := T
        good, acc := execute(jmp, nop)
        good -> instruction, acc
        @(instruction - 1)
    }
    nop[instruction] -> {
        nop[instruction] := F
        jmp[instruction] := T
        good, acc := execute(jmp, nop)
        good -> instruction, acc
        @(instruction - 1)
    }
    @(instruction - 1)
} (|jmp|)
